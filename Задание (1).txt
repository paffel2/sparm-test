Задание:
Развернуть АПИ (фреймворк языка на усмотрение, но желательно что-то легковесное наподобие Flask для Python) для приема документов от внешних заказчиков, со следующими возможностями: 
1) Принимать и обрабатывать Post запросы с данными в формате JSON (пример содержимого запроса example.json)
Под обработкой понимается валидация данных, создание/поиск/обновление/удаление пользователя и/или его документов 
2) Авторизация пользователя по данным из БД (поля login/password таблицы Users. Password в БД обязательно должен быть закодирован в base64)
3) Отображение информации и документов об авторизованном пользователе
4) Отображение информации о всех пользователях их документах (доступно только админу)
5) Сделать соответствующее описания созданного сервиса в readme.md и выгрузить в свой репозиторий, указанный в резюме (если не указан - скинуть ссылку)

Описание основных полей посылки JSON:
"id"           - уникальный идентификатор посылки (обязательный)
"referralGUID" - уникальный ГУИД посылки (обязательный)
"referralDate" - дата отправки посылки  (обязательный)
"Data"         - массив объектов с данными пользователей
 - "Sender"       - объект с данными отправителя посылки
    - "Organization" - объект с данными об организации отправителя посылки
       - "oid"          - уникальный идентификатор организации
       - "fullName"     - полное наименование организации
 - "Users"        - массив объектов с данными пользователей
    - "id"           - уникальный идентификатор пользователя (обязательный)
    - "lastName"     - фамилия пользователя (обязательный)
    - "firstName"    - имя пользователя
    - "patrName"     - отчество пользователя
    - "birthDate"    - дата рождения 
    - "sex"          - пол
    - "phoneNumber"  - номер телефона (обязательный)
    - "snils"        - снилс
    - "inn"          - ИНН
    - "Address"      - объект с данными адреса
       - "value"        - строка с полным адресом
    - "Documents"    - массив объектов с данными документов
       - "id"                - id документа
       - "documentType_id"   - тип (полис, паспорт и т д)
       - "documentType_name" - полное наименование
       - "series"            - серия
       - "number"            - номер
       - "beginDate"         - дата начала действия
       - "endDate"           - дата окончания действия
       - "orgDep_name"       - кем выдан

Примечания:
 - Вывод информации на усмотрение исполнителя, но в выводе должны присутствовать все основные поля из описания посылки
 - Отметка (обязательный) у поля в структуре JSON указывает на то, что наличие данного поля и его значения гарантируется в посылке
 - Названия точек запроса (url) на усмотрение исполнителя
 - Обязательные поля для создания записей в БД:
   -- Пользователь (users): login, password, gender, type_id, last_name, first_name
   -- Документы (documents): user_id, type_id, data
       --- В поле data должен быть записан текст в формате JSON с данными документов пользователя (см. "Структура JSON с данными документов")
 - Описание полей таблиц БД находится в комментариях к этим полям в таблицах

"Структура JSON с данными документов"
[
      // первый документ
   {
      referralId   - уникальный идентификатор посылки
      referralDate - дата отправки посылки 
      senderName   - полное наименование организации отправителя
      name         - полное наименование документа (при наличии),
      series       - серия (обязателен для паспорта),
      number       - номер,
      beginDate    - дата начала действия (обязателен для паспорта и полиса),
      endDate      - дата окончания действия (при наличии),
      issuedName  - кем выдан (обязателен для паспорта и полиса)
   },
      // второй документ 
   {
   },
   ...
      // n-ный документ
   {
   }   
]

